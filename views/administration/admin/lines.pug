extends layout_admin

block content
    div#zone.section.full-section.container
        h2 #{translation.LINEHEAD}

        div.row
            ul(data-collapsible="expandable").collapsible.popout#collapsible-list-zones-lines
                each zone in zones
                    - var count = 0
                    each line in lines
                        if zone.id == line.idZone
                            - count++;
                    li
                        div.collapsible-header.ebony-clay.white-text
                            div
                                i.material-icons landscape
                                = zone.name
                            a(href="#modal-add-line", data-id=zone.id, data-zone=zone.name).waves-effect.waves-light.btn.modal-trigger.add-lines#add-lines #{translation.LINEBTNLINE}
                                i.material-icons.left plus_one

                        div.collapsible-body
                            span
                                if count != 0
                                    table.centered.highlight.tab-scroll&attributes({'id': 'tab-zone-line-'+zone.id})
                                        thead
                                            tr
                                                th #{translation.LINETABID}
                                                th #{translation.LINETABIDDEPART}
                                                th #{translation.LINETABTERMINAL}
                                                th #{translation.LINETABDELETE}
                                        tbody
                                            each line in lines
                                                if zone.id == line.idZone
                                                    tr
                                                        td= line.id
                                                        td= line.departure
                                                        td= line.arrival
                                                        td
                                                            button.waves-effect.waves-light.btn(onclick=`deleteLine(${line.id}, ${line.idZone})`)
                                                                i.material-icons delete
                                else
                                    p&attributes({'id': 'tab-zone-line-'+zone.id}) #{translation.LINEERROR}




            //table.centered.highlight.tab-scroll#tab-lines
            //    thead
            //        tr
            //            th ID
            //            th USERNAME
            //            th EMAIL
            //            th ROLE
            //            th ZONE
            //            th MODIFIER
            //            th SUPPRIMER
            //    tbody
            //        each user in users
            //            tr
            //                td= user.id
            //                td= user.username
            //                td= user.email
            //                td= user.role
            //                td= user.zone
            //                td
            //                    a.waves-effect.waves-light.btn.modal-trigger(href="#modal-edit-line", data-id=user.id, data-username=user.username, data-email=user.email, data-idrole=user.idRole, data-idzone=user.idZone)
            //                        i.material-icons edit
            //                td
            //                    button.waves-effect.waves-light.btn(onclick=`deleteUser(${user.id})`)
            //                        i.material-icons delete

    //ADD MODAL
    div(id="modal-add-line").modal.modal-fixed-footer.modal-add-line
        div.modal-content
            h4 #{translation.LINEEADDHEAD}
            div.row
                form#add-line-form.col.s12
                    div.row
                        div.input-field.col.s12
                            input(id="line-add-idZone", name="id", type="text", disabled="disabled").validate
                            label(for="line-add-idZone", disabled="disabled") #{translation.LINEEADDID}
                        div.input-field.col.s12
                            input(id="line-add-departure", name="departure", type="text", required="required", aria-required="true").validate.autocomplete
                            label(for="line-add-departure") #{translation.LINEEADDDEPART}
                        div.input-field.col.s12
                            input(id="line-add-terminal", name="terminal", type="text", required="required", aria-required="true").validate.autocomplete
                            label(for="line-add-terminal") #{translation.LINEEADDARRIVE}
        div.modal-footer
            a(href="#!").modal-action.modal-close.waves-effect.waves-green.btn-flat.red-text #{translation.LINEEADDBTNCANCEL}
            button(onclick="createLine()", type="submit", for="#add-line-form").btn.waves-effect.waves-light.modal-action #{translation.LINEEADDBTNVALIDATE}
                i.material-icons.right send

    //MODIFY MODAL
    div(id="modal-edit-line").modal.modal-fixed-footer.modal-edit-line
        div.modal-content
            h4 #{translation.LINEEMODIFHEAD}
            div.row
                form#edit-line-form.col.s12
                    div.input-field.col.s12
                        input(id="line-edit-id", name="id", type="text", disabled="disabled").validate
                        label(for="line-edit-id", disabled="disabled") #{translation.LINEEMODIFID}
                    div.input-field.col.s12
                        input(id="line-edit-username", name="username", type="text", disabled="disabled").validate
                        label(for="line-edit-username", disabled="disabled") #{translation.LINEEMODIFUSER}
                    div.input-field.col.s12
                        input(id="line-edit-email", name="email", type="email", required="required", aria-required="true").validate
                        label(for="line-edit-email") #{translation.LINEEMODIFEMAIL}
                    div.input-field.col.s6
                        input(id="line-edit-chpassword", name="chpassword", type="password").validate
                        label(for="line-edit-chpassword") #{translation.LINEEMODIFPSW}
                    div.input-field.col.s6
                        input(id="line-edit-chpassword2", name="chpassword2", type="password").validate
                        label(for="line-edit-chpassword2") #{translation.LINEEMODIFPSW2}
                    //div.input-field.col.s12
                    //    select(name="role", required="required")#line-edit-role.validate
                    //        option(value="", disabled="disabled", selected="selected") Choisir un rôle
                    //        each role in roles
                    //            option(value=`${role.id}`)=role.name
                    //    label(for="line-edit-role") Rôle
                    //div.input-field.col.s12
                    //    select(name="zone", required="required")#line-edit-zone.validate
                    //        option(value="", disabled="disabled", selected="selected") Choisir une zone
                    //        each zone in zones
                    //            option(value=`${zone.id}`)=zone.name
                    //    label Zone
        div.modal-footer
            a(href="#!").modal-action.modal-close.waves-effect.waves-green.btn-flat.red-text #{translation.LINEEMODIFBTNCANCEL}
            button(onclick="updateUser()", type="submit", for="#edit-line-form").btn.waves-effect.waves-light.modal-action #{translation.LINEEMODIFBTNSAVE}
                i.material-icons.right done

    div(id="modal-suggestions-line").modal.bottom-sheet.suggestions
        div.modal-content
            h3 #{translation.LINENOTFIND}
            h5 #{translation.LINESUGGEST}
            ul#suggestions-lines.collection
